#!/bin/bash
# Creates a local branch, then ensures that it is also linked to a remote
# branch of the same name. The script does nothing if the current directory is
# not git-controlled.
#
# The script may easily be converted into a function and added to your
# .bashrc or .bash_functions file; see the 'sample_bashrc' directory in this
# repo for more information.
#
# $1 -> $BRANCH_NAME - The name of the branch to be created.

if [[ -z $(git remote 2> /dev/null) ]] ; then
  echo "Current path is not git-controlled."
  exit 1
fi

BRANCH_NAME=$1
BRANCH_HASH=$(git rev-parse --quiet --verify ${BRANCH_NAME})
if [[ -z ${BRANCH_HASH} ]] ; then # the branch doesn't exist locally; create it.
  git checkout -b ${BRANCH_NAME}
  git push origin ${BRANCH_NAME}
  git branch -u origin/${BRANCH_NAME}
else # the branch already exists locally; update it.
  git checkout ${BRANCH_NAME}
fi

